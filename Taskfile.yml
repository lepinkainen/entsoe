# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

dotenv: [".env"]

vars:
  FUNCNAME: entsoe_redis
  BUILDDIR: build
  BINARY: "{{.BUILDDIR}}/{{.FUNCNAME}}"

tasks:
  build:
    deps: [test, vet, lint]
    cmds:
      - go build -v -ldflags="-X main.Version={{.GIT_COMMIT}}" -o {{.BINARY}}
    sources:
      - ./*.go
    generates:
      - "{{.BINARY}}"
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h

  build-linux:
    deps: [test, vet, lint]
    cmds:
      - GOARCH=amd64 GOOS=linux go build -v -ldflags="-X main.Version={{.GIT_COMMIT}}" -o {{.BINARY}}-linux-amd64
    sources:
      - ./*.go
    generates:
      - "{{.BINARY}}-linux-amd64"
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h

  lint:
    desc: Run Go linters (requires golangci-lint)
    cmds:
      - golangci-lint run ./...
    sources:
      - "**/*.go"
      - "go.mod"
    silent: true

  vet:
    cmds:
      - go vet ./...
    sources:
      - ./*.go

  test:
    desc: Run Go tests
    cmds:
      - go test -v ./...
    sources:
      - "**/*.go"
      - "go.mod"

  test-ci:
    desc: Run Go tests for CI with coverage
    cmds:
      - go test -tags=ci -cover -v ./...
    sources:
      - "**/*.go"
      - "go.mod"

  build-ci:
    desc: Build for CI
    deps: [test-ci, lint]
    cmds:
      - go build -v -ldflags="-X main.Version={{.GIT_COMMIT}}" -o {{.BINARY}}-ci
    sources:
      - ./*.go
    generates:
      - "{{.BINARY}}-ci"
    vars:
      GIT_COMMIT:
        sh: git log -n 1 --format=%h

  publish:
    deps: [build_linux]
    cmds:
      - echo "Publishing to endymion"
      - scp entsoe_redis endymion.xyz:bin/

  upgrade-deps:
    desc: Upgrade all dependencies to their latest versions
    silent: true
    cmds:
      - go get -u ./...
      - go mod tidy
      - echo "âœ… Dependencies upgraded successfully"
    sources:
      - go.mod
      - go.sum
    generates:
      - go.mod
      - go.sum
